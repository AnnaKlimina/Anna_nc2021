let user={};function createWarning(e,t){if(e.nextElementSibling?.classList.contains("form-block__warning"))return;let a=document.createElement("div");a.className="form-block__warning",a.innerHTML=t,e.after(a)}function removeWarning(e){let t=e.nextElementSibling;t?.classList.contains("form-block__warning")&&t.remove()}async function checkLogin(e){let t=e.target.value;if(""===t||0==+t&&!t.includes("0"))return void createWarning(e.target,"*Некорректный логин");let a,n=await fetch("https://my-library-project-server.herokuapp.com/check_exist_login?input="+t);n.ok?(a=await n.json(),a?createWarning(e.target,"*Этот логин уже используется"):removeWarning(e.target)):alert(n.status)}function checkPassword(e){let t=e.target.value;t.length<8||null===t.match(/[\p{Alpha}]/giu)||null===t.match(/[\p{Nd}]/giu)?createWarning(e.target,"*Пароль должен содержать от 8 символов. Обязательны хотя бы одна буква и цифра"):removeWarning(e.target)}function checkRepeatPassword(e){return function(t){document.querySelector(".form-block[data-appeared-block="+e+"]").password.value===t.target.value?removeWarning(t.target):createWarning(t.target,"*Ввод не соответствует выбранному паролю")}}function checkMail(e){let t=e.target.value;0!==t.length&&null===t.match(/[^A-Za-z\p{Nd}-]/giu)&&null===t[0].match(/[^A-Za-z]/giu)&&"-"!==t[t.length-1]?removeWarning(e.target.parentNode):createWarning(e.target.parentNode,"*Некорректная локальная часть электронной почты")}async function checkLoginOnSubmit(e){let t,a=e.elements.login.value,n=await fetch("https://my-library-project-server.herokuapp.com/check_exist_login?input="+a);if(n.ok)return t=await n.json(),!(""===a||0==+a&&!a.includes("0")||t);alert(n.status)}function checkPasswordOnSubmit(e){let t=e.elements.password.value;return!(t.length<8||null===t.match(/[\p{Alpha}]/giu)||null===t.match(/[\p{Nd}]/giu))}function checkRepeatPasswordOnSubmit(e){return!(e.elements.password.value!==e.elements.repeatPassword.value)}function checkMailOnSubmit(e){let t=e.elements.mail.value;return!(0===t.length||null!==t.match(/[^A-Za-z\p{Nd}-]/giu)||null!==t[0].match(/[^A-Za-z]/giu)||"-"===t[t.length-1])}async function authorize(e){document.querySelector("._user-menu").firstElementChild.innerHTML='<li class="menu-list__item button" data-menu-link="user-library-page">Моя библиотека</li>\n            <li class="menu-list__item button" data-menu-link="user-settings-page">Настройки</li>\n            <li class="menu-list__item button" data-menu-link="sign-out">Выйти</li>';let t=document.querySelector(".authorization-block");t.dataset.userState="authorized",t.innerHTML='<img class="authorization-block__icon _user-avatar" />',t.querySelector(".authorization-block__icon").src=e.avatar,t.querySelector(".authorization-block__icon").onerror=()=>{t.querySelector(".authorization-block__icon").src="https://my-library-project-server.herokuapp.com/defaultUserAvatar.png"};let a=document.createElement("span");if(a.className="authorization-block__user-login",a.innerHTML=e.login,t.prepend(a),"current-book-page"===document.querySelector(".main-page").dataset.currentPage){let t,a=await fetch("https://my-library-project-server.herokuapp.com/check_book?book="+document.querySelector(".book-content").dataset.book+"&login="+e.login);if(!a.ok)return void alert(a.status);t=await a.json(),t&&changeAddButton("deleteFromUserLibrary","Удалить из библиотеки")}}let form=document.querySelector(".form-block[data-appeared-block = sign-up]");form.login.onblur=checkLogin,form.password.onblur=checkPassword,form.repeatPassword.onblur=checkRepeatPassword("sign-up"),form.mail.onblur=checkMail,form.addEventListener("submit",(async function(e){removeWarning(e.target.lastElementChild.previousElementSibling);let t=e.target.closest(".form-block");if(!(await checkLoginOnSubmit(t)&&checkMailOnSubmit(t)&&checkPasswordOnSubmit(t)&&checkRepeatPasswordOnSubmit(t)))return createWarning(e.target.lastElementChild,"Форма регистрации заполнена некорректно!"),void e.preventDefault();t.submit()}),{capture:!0});let signInForm=document.querySelector(".form-block[data-appeared-block = sign-in]");async function signOut(){document.querySelector("._user-menu").firstElementChild.innerHTML='\n                <li class="menu-list__item button" data-menu-link="sign-in-page">Вход</li>\n                <li class="menu-list__item button" data-menu-link="sign-up-page">Регистрация</li>';let e=document.querySelector(".authorization-block");switch(e.dataset.userState="unauthorized",e.innerHTML='<svg class="authorization-block__icon svg-icon button" height="30px" width="30px" viewBox="0 0 128 128">\n                    <use xlink:href="#user" />\n                </svg>',document.querySelector(".main-page").dataset.currentPage){case"current-book-page":changeAddButton("addToUserLibrary","Добавить в библиотеку");break;case"user-library-page":let e,t=await fetch("https://my-library-project-server.herokuapp.com/library");if(!t.ok)return void alert(t.status);e=await t.json(),createBooksPage(e,"books-page",!0);let a=new CustomEvent("load-cite-block");window.dispatchEvent(a);break;case"user-settings-page":createMajorPage()}}signInForm.submit.addEventListener("click",(async function(e){e.preventDefault();let t,a=await fetch("https://my-library-project-server.herokuapp.com/authorize?login="+signInForm.login.value+"&password="+signInForm.password.value);if(a.ok){if(t=await a.json(),!t.length)return createWarning(e.target.parentNode,"Неверный логин или пароль!"),void e.stopImmediatePropagation();signInForm.dataset.state="checkPassed",authorize(t[0]),formHandler("sign-in")(e)}else alert(a.status)}));